name: CD - pull Docker image & build with ansible (staging only)

on:
  repository_dispatch:
    types: [deploy-staging]

jobs:
  deploy:
    runs-on: self-hosted
    steps:
      - name: Debug workflow info
        run: |
          echo "Event Type: ${{ github.event.action }}"
          echo "Image Tag: ${{ github.event.client_payload.image_tag }}"
          echo "Triggered by: ${{ github.actor }}"
          echo "Current user: $(whoami)"
          echo "Home directory: $HOME"
          echo "Working directory: $(pwd)"
          echo "User ID: $(id -u)"
          echo "Group ID: $(id -g)"

      - name: Checkout current repository
        uses: actions/checkout@v4
          
      - name: Checkout Ansible repository
        uses: actions/checkout@v4
        with:
          repository: Abdu1964/ansible-deploy_v2.0
          path: ansible-deploy_v2.0

      - name: Create .env file for Hypothesis_generation
        run: |
          mkdir -p $HOME/services/Hypothesis_generation
          cat > $HOME/services/Hypothesis_generation/.env << EOF

              # === API Keys and Tokens ===
              ANTHROPIC_API_KEY=${{ secrets.ANTHROPIC_API_KEY }}
              OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
              HF_TOKEN=${{ secrets.HF_TOKEN }}

              # === Authentication and Security ===
              JWT_SECRET=${{ secrets.JWT_SECRET }}
              JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}

              # === Database Configuration ===
              DB_NAME=${{ secrets.DB_NAME }}
              MONGODB_URI=${{ secrets.MONGODB_URI }}
              MONGO_PORT_HOST=${{ secrets.MONGO_PORT_HOST }}
              MONGO_PORT_INTERNAL=${{ secrets.MONGO_PORT_INTERNAL }}

              # === Prefect Workflow Configuration ===
              PREFECT_PORT_HOST=${{ secrets.PREFECT_PORT_HOST }}
              PREFECT_PORT_INTERNAL=${{ secrets.PREFECT_PORT_INTERNAL }}

              # === Prolog Microservice Configuration ===
              PROLOG_PORT_HOST=${{ secrets.PROLOG_PORT_HOST }}
              PROLOG_PORT_INTERNAL=${{ secrets.PROLOG_PORT_INTERNAL }}

              # === Flask Backend Configuration ===
              FLASK_PORT_HOST=${{ secrets.FLASK_PORT_HOST }}
              FLASK_PORT_INTERNAL=${{ secrets.FLASK_PORT_INTERNAL }}

              # === docker-image===
              prolog_staging=${{secrets.prolog_staging}}
              flask_staging=${{secrets.flask_staging}}
              prefect_staging=${{secrets.prefect_staging}}
              prefect_deployment_staging=${{secrets.prefect_deployment_staging}}    

          
      - name: Create dynamic inventory
        run: |
          cd ansible-deploy_v2.0
          mkdir -p inventory
          # Get the actual username running the workflow
          CURRENT_USER=$(whoami)
          USER_HOME=$HOME
          cat > inventory/hosts.ini <<EOL
          [Hypothesis_Remote]
          localhost ansible_connection=local ansible_user=$CURRENT_USER ansible_become=false ansible_user_dir=$USER_HOME
          EOL
          echo "Inventory created for user: $CURRENT_USER"
          cat inventory/hosts.ini
          
      - name: Create dynamic playbook
        run: |
          cd ansible-deploy_v2.0
          mkdir -p playbooks
          # Create the deploy_server.yml playbook dynamically
          cat > playbooks/deploy_server.yml <<EOL
          ---
          # deploy_Hypothesis
          - name: Deploy Hypothesis Service
            hosts: Hypothesis_Remote
            tags: Hypothesis_Remote
            become: no
            tasks:
              - include_role:
                  name: Hypothesis
                  tasks_from: staging-production-deploy.yml
          EOL
          echo "Playbook created:"
          cat playbooks/deploy_server.yml
          
      - name: Ansible configuration
        run: |
          cd ansible-deploy_v2.0
          # Ensure ansible uses the correct Python interpreter
          cat > ansible.cfg <<EOL
          [defaults]
          interpreter_python = /usr/bin/python3
          host_key_checking = False
          inventory = inventory/hosts.ini
          become = false
          remote_user = $(whoami)
          [privilege_escalation]
          become = false
          become_method = sudo
          become_user = root
          become_ask_pass = false
          EOL
          
      - name: Deploy with Ansible
        run: |
          cd ansible-deploy_v2.0
          echo "Running as user: $(whoami)"
          echo "Home directory: $HOME"
          # Force the correct installation directory
          ansible-playbook -i inventory/hosts.ini playbooks/deploy_server.yml \
            --tags "Hypothesis_Remote" \
            --tags "local_network" \
            -e "install_dir=$HOME/services/Hypothesis" \
            -e "ansible_user_id=$(whoami)" \
            -e "ansible_user_dir=$HOME" \
            -v